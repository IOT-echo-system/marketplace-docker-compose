version: '3.8'

services:
  marketplace-nginx:
    image: nginx:stable-perl
    container_name: marketplace-nginx
    restart: unless-stopped
    volumes:
      - ./default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 8080:8080
    networks:
      - marketplace

  marketplace-ui:
    image: shiviraj/marketplace-ui:latest
    container_name: marketplace-ui
    restart: unless-stopped
    environment:
      PORT: 3000
      NEXT_PUBLIC_RAZORPAY_KEY_ID: ${RAZORPAY_KEY_ID}
    networks:
      - marketplace

  marketplace-backend:
    image: shiviraj/marketplace-backend:arm64
    container_name: marketplace-backend
    restart: unless-stopped
    environment:
      PORT: 1337
      HOST: 0.0.0.0
      DATABASE_CLIENT: postgres
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_NAME: ${POSTGRES_DB}
      DATABASE_USERNAME: ${POSTGRES_USER}
      DATABASE_PASSWORD: ${POSTGRES_PASSWORD}
      DATABASE_SSL: ${DATABASE_SSL}
      JWT_SECRET: ${JWT_SECRET}
      APP_KEYS: ${APP_KEYS}
      API_TOKEN_SALT: ${API_TOKEN_SALT}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      TRANSFER_TOKEN_SALT: ${TRANSFER_TOKEN_SALT}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      SMTP_USERNAME: ${SMTP_USERNAME}
      SMTP_HOST: ${SMTP_HOST}
      FRONTEND_URL: ${FRONTEND_URL}
      RAZORPAY_KEY_ID: ${RAZORPAY_KEY_ID}
      RAZORPAY_KEY_SECRET: ${RAZORPAY_KEY_SECRET}
      SHIPPING_ACCESS_TOKEN: ${SHIPPING_ACCESS_TOKEN}
      SHIPPING_SECRET_KEY: ${SHIPPING_SECRET_KEY}
      shippingBaseUrl: ${shippingBaseUrl}

    ports:
      - 1337:1337
    networks:
      - marketplace


  postgres:
    image: postgres:13
    container_name: marketplace-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - marketplace

#  postgres-backup:
#    image: shiviraj/db-backup:arm64
#    container_name: postgres-backup
#    restart: unless-stopped
#    environment:
#      CRON: ${BACKUP_CRON}
#      GIT_REPOSITORY: ${GIT_REPOSITORY}
#      DB_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/robotutor
#      USER_EMAIL: ${USER_EMAIL}
#      USER_NAME: ${USER_NAME}
#    depends_on:
#      - postgres
#    networks:
#      - marketplace

networks:
  marketplace:
    driver: bridge
